/**
 * =====================================
 * #AssignScriptResults
 *
 * WARNING:
 *		This function is deprecated in favor of the more transparent equivalent:
 *		#Assign ( Get ( ScriptResult ) ). This function is still supported for
 *		backwards compatibility.
 *
 * PURPOSE:
 *		#AssignScriptResults uses the current script result (treated as if
 *		generated by the # function) to declare and populate a series of
 *		locally-scoped script variables. This function is equivalent to
 *		#Assign ( Get ( ScriptResult ) ).
 *
 * RETURNS:
 *		True (1) when the script result is a valid set of name-value pairs
 *		(which includes the empty string); False (0) otherwise.
 *
 * PARAMETERS: none
 *
 * DEPENDENCIES:
 *		#Assign ( parameters )
 *
 * NOTE:
 *		To be accessible outside this function, variable declarations in the
 *		script result must use the $- or $$-prefixed notation for FileMaker
 *		variables. This function does not handle that for you.
 *
 * HISTORY:
 *		MODIFIED on 2012-12-07 by Jeremy Bante <http://scr.im/jbante> to use
 *		newer supported functions.
 *		MODIFIED on 2010-10-04 by Jeremy Bante <http://scr.im/jbante> to return
 *		explicit True or False values indicating successful evaluation of the
 *		script result, and to fit syntax inspired by a comment on
 *		standards.filemakermagazine.com by Richard Dyce.
 *		CREATED on 2010-08-25 by Jeremy Bante <http://scr.im/jbante>.
 *		INSPIRED by an example in the FileMaker help documentation.
 *
 * REFERENCES:
 *		Script Parameter Interface Best Practice: http://filemakerstandards.org/pages/viewpage.action?pageId=557462
 * =====================================
 */

#Assign ( Get ( ScriptResult ) )